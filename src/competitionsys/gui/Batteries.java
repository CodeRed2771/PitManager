package competitionsys.gui;

import competitionsys.persistence.Battery;
import competitionsys.persistence.Competition;
import competitionsys.persistence.Match;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.ArrayList;

/**
 *
 * @author Michael
 */
public class Batteries extends javax.swing.JPanel {

    ArrayList<Match> matches;

    /**
     * Creates new form Batteries
     */
    public Batteries() {
        initComponents();
        matches = Competition.getInstance().getCodeRedSchedule();
        if (matches == null) {
            matches = new ArrayList<>();
        }
        repaint();
    }

    @Override
    public void paintComponent(Graphics g) {
        Image dbImg = createImage(getWidth(), getHeight());
        Graphics dbg = dbImg.getGraphics();
        draw(dbg);
        g.drawImage(dbImg, 0, 0, this);
    }

    public void draw(Graphics g) {
        g.setColor(Color.white);
        for (int i = 20; i <= 140; i += 60) {
            g.drawRect(i, 60, 60, 30);
        }
        for (int x = 20; x <= 140; x += 60) {
            for (int y = 90; y <= 330; y += 60) {
                Battery batt = convertPosToBattery((x - 10) / 60, (y - 40) / 60);
                g.setColor(batt.isCharged() ? Color.green : Color.red);
                g.fillRect(x, y, 60, 60);
                g.setColor(Color.white);
                g.drawRect(x, y, 60, 60);
            }
        }
        g.setColor(Color.white);
        g.fillRect(250, 60, 160, 200);
        g.setColor(Color.magenta);
        g.fillRect(265, 75, 130, 170);
    }

    public void refresh() {
        repaint();
    }

    private Battery convertPosToBattery(int row, int column) {
        try {
            int i = Competition.getInstance().getNextCodeRedMatch();
            i += column + 3 * (row + 1);
            return matches.get(wrapIndex(i)).getBattery();
        } catch (IndexOutOfBoundsException ex) {
            return new Battery("", false);
        }
    }

    private int wrapIndex(int i) {
        return i < matches.size() ? i : i - matches.size();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/competitionsys/gui/battery.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BATTERIES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 618, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 401, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(jLabel1))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}
